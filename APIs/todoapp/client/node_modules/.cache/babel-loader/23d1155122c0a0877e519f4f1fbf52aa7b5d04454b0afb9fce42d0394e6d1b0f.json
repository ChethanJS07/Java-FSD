{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chethan j s\\\\Downloads\\\\FSD\\\\APIs\\\\todoapp\\\\client\\\\src\\\\Views\\\\TODO\\\\TODO.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Styles from './TODO.module.css';\nimport { dummy } from './dummy';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TODO(props) {\n  _s();\n  const [newTodo, setNewTodo] = useState('');\n  const [todoData, setTodoData] = useState(dummy);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchTodo = async () => {\n      setTodoData(dummy);\n      setLoading(false);\n    };\n    fetchTodo();\n  }, []);\n  const getTodo = async () => {\n    try {\n      const options = {};\n    } catch (error) {}\n  };\n  const addTodo = () => {};\n  const deleteTodo = id => {};\n  const updateTodo = id => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.ancestorContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.headerContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: Styles.todoInput,\n          type: \"text\",\n          name: \"New Todo\",\n          value: newTodo,\n          onChange: event => {\n            setNewTodo(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addButton\",\n          name: \"add\",\n          className: Styles.addButton,\n          onClick: () => {\n            addTodo();\n            setNewTodo('');\n          },\n          children: \"+ New Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"todoContainer\",\n      className: Styles.todoContainer,\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this) : todoData.length > 0 ? todoData.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.todo,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: Styles.infoContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: entry.done,\n            onChange: () => {\n              updateTodo(entry._id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 37\n          }, this), entry.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: () => {\n            deleteTodo(entry._id);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }, this)]\n      }, entry._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: Styles.noTodoMessage,\n        children: \"No tasks available. Please add a new task.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(TODO, \"+EPivv82uvbFLTz9GMXHu+oARG0=\");\n_c = TODO;\nvar _c;\n$RefreshReg$(_c, \"TODO\");","map":{"version":3,"names":["useEffect","useState","Styles","dummy","axios","jsxDEV","_jsxDEV","TODO","props","_s","newTodo","setNewTodo","todoData","setTodoData","loading","setLoading","fetchTodo","getTodo","options","error","addTodo","deleteTodo","id","updateTodo","className","ancestorContainer","children","headerContainer","fileName","_jsxFileName","lineNumber","columnNumber","todoInput","type","name","value","onChange","event","target","addButton","onClick","todoContainer","style","color","length","map","entry","index","todo","infoContainer","checked","done","_id","title","cursor","noTodoMessage","_c","$RefreshReg$"],"sources":["C:/Users/chethan j s/Downloads/FSD/APIs/todoapp/client/src/Views/TODO/TODO.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport Styles from './TODO.module.css'\r\nimport { dummy } from './dummy'\r\nimport axios from 'axios';\r\n\r\nexport function TODO(props) {\r\n\r\n    const [newTodo, setNewTodo] = useState('')\r\n    const [todoData, setTodoData] = useState(dummy);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchTodo = async () => {\r\n            setTodoData(dummy);\r\n            setLoading(false)\r\n        }\r\n        fetchTodo();\r\n    }, [])\r\n\r\n    const getTodo = async () => {\r\n        try\r\n        {\r\n            const options = {}\r\n        }\r\n        catch(error)\r\n        {\r\n\r\n        }\r\n    }\r\n\r\n    const addTodo = () => {\r\n\r\n    }\r\n\r\n    const deleteTodo = (id) => {\r\n    };\r\n\r\n    const updateTodo = (id) => {\r\n    };\r\n\r\n    return (\r\n        <div className={Styles.ancestorContainer}>\r\n            <div className={Styles.headerContainer}>\r\n                <h1>\r\n                    Tasks\r\n                </h1>\r\n                <span>\r\n                    <input\r\n                        className={Styles.todoInput}\r\n                        type='text'\r\n                        name='New Todo'\r\n                        value={newTodo}\r\n                        onChange={(event) => {\r\n                            setNewTodo(event.target.value)\r\n                        }}\r\n                    />\r\n                    <button\r\n                        id='addButton'\r\n                        name='add'\r\n                        className={Styles.addButton}\r\n                        onClick={() => {\r\n                            addTodo()\r\n                            setNewTodo('')\r\n                        }}\r\n                    >\r\n                        + New Todo\r\n                    </button>\r\n                </span>\r\n            </div>\r\n            <div id='todoContainer' className={Styles.todoContainer}>\r\n                {loading ? (\r\n                    <p style={{ color: 'white' }}>Loading...</p>\r\n                ) : (\r\n                    todoData.length > 0 ? (\r\n                        todoData.map((entry, index) => (\r\n                            <div key={entry._id} className={Styles.todo}>\r\n                                <span className={Styles.infoContainer}>\r\n                                    <input\r\n                                        type='checkbox'\r\n                                        checked={entry.done}\r\n                                        onChange={() => {\r\n                                            updateTodo(entry._id);\r\n                                        }}\r\n                                    />\r\n                                    {entry.title}\r\n                                </span>\r\n                                <span\r\n                                    style={{ cursor: 'pointer' }}\r\n                                    onClick={() => {\r\n                                        deleteTodo(entry._id);\r\n                                    }}\r\n                                >\r\n                                    Delete\r\n                                </span>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <p className={Styles.noTodoMessage}>No tasks available. Please add a new task.</p>\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}